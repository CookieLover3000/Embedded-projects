
Opdracht6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000240  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007f0  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006c9  00000000  00000000  00000b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000354  00000000  00000000  00001225  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ec  00000000  00000000  0000157c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f5  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000107  00000000  00000000  00001a5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001b64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_10>
  2c:	0c 94 a1 00 	jmp	0x142	; 0x142 <__vector_11>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 89 00 	call	0x112	; 0x112 <main>
  78:	0c 94 1e 01 	jmp	0x23c	; 0x23c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initTimer2FastPWM>:
}

void pasPeriodeTijdTimer1Aan(uint8_t prescalers)
{
	TCCR1B &= 0x10;
	TCCR1B |= prescalers;
  80:	88 e0       	ldi	r24, 0x08	; 8
  82:	8a b9       	out	0x0a, r24	; 10
  84:	83 e2       	ldi	r24, 0x23	; 35
  86:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
  8a:	87 e0       	ldi	r24, 0x07	; 7
  8c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
  90:	08 95       	ret

00000092 <initTimer1FastPWM_ICR1>:
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	84 b9       	out	0x04, r24	; 4
  96:	82 e8       	ldi	r24, 0x82	; 130
  98:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
  9c:	8d e1       	ldi	r24, 0x1D	; 29
  9e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  a2:	8f ef       	ldi	r24, 0xFF	; 255
  a4:	9f e7       	ldi	r25, 0x7F	; 127
  a6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	9f ef       	ldi	r25, 0xFF	; 255
  b2:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  b6:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
  ba:	82 e2       	ldi	r24, 0x22	; 34
  bc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
  c0:	78 94       	sei
  c2:	08 95       	ret

000000c4 <initADC>:
  c4:	ec e7       	ldi	r30, 0x7C	; 124
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	84 64       	ori	r24, 0x44	; 68
  cc:	80 83       	st	Z, r24
  ce:	ea e7       	ldi	r30, 0x7A	; 122
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	87 60       	ori	r24, 0x07	; 7
  d6:	80 83       	st	Z, r24
  d8:	80 81       	ld	r24, Z
  da:	80 68       	ori	r24, 0x80	; 128
  dc:	80 83       	st	Z, r24
  de:	08 95       	ret

000000e0 <dimLed>:
  e0:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
  e4:	08 95       	ret

000000e6 <leesADwaarde>:
  e6:	ec e7       	ldi	r30, 0x7C	; 124
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	90 81       	ld	r25, Z
  ec:	90 7f       	andi	r25, 0xF0	; 240
  ee:	90 83       	st	Z, r25
  f0:	90 81       	ld	r25, Z
  f2:	89 2b       	or	r24, r25
  f4:	80 83       	st	Z, r24
  f6:	ea e7       	ldi	r30, 0x7A	; 122
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	80 65       	ori	r24, 0x50	; 80
  fe:	80 83       	st	Z, r24
 100:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 104:	84 ff       	sbrs	r24, 4
 106:	fc cf       	rjmp	.-8      	; 0x100 <leesADwaarde+0x1a>
 108:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 10c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 110:	08 95       	ret

00000112 <main>:
 112:	0e 94 49 00 	call	0x92	; 0x92 <initTimer1FastPWM_ICR1>
 116:	0e 94 40 00 	call	0x80	; 0x80 <initTimer2FastPWM>
 11a:	0e 94 62 00 	call	0xc4	; 0xc4 <initADC>
 11e:	85 e0       	ldi	r24, 0x05	; 5
 120:	0e 94 73 00 	call	0xe6	; 0xe6 <leesADwaarde>
 124:	9c 01       	movw	r18, r24
 126:	af ef       	ldi	r26, 0xFF	; 255
 128:	b0 e0       	ldi	r27, 0x00	; 0
 12a:	0e 94 ed 00 	call	0x1da	; 0x1da <__umulhisi3>
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	33 e0       	ldi	r19, 0x03	; 3
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	50 e0       	ldi	r21, 0x00	; 0
 136:	0e 94 ce 00 	call	0x19c	; 0x19c <__divmodsi4>
 13a:	82 2f       	mov	r24, r18
 13c:	0e 94 70 00 	call	0xe0	; 0xe0 <dimLed>
 140:	ee cf       	rjmp	.-36     	; 0x11e <main+0xc>

00000142 <__vector_11>:
}

ISR(TIMER1_COMPA_vect)
{
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	0f 92       	push	r0
 14a:	11 24       	eor	r1, r1
 14c:	8f 93       	push	r24
 14e:	ef 93       	push	r30
 150:	ff 93       	push	r31
	TCCR2B &= ~((1 << CS20) | (1 << CS21) | (1 << CS22));
 152:	e1 eb       	ldi	r30, 0xB1	; 177
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	88 7f       	andi	r24, 0xF8	; 248
 15a:	80 83       	st	Z, r24
	PORTD &= ~(1 << PORTD3); // zet PORTD3 laag
 15c:	8b b1       	in	r24, 0x0b	; 11
 15e:	87 7f       	andi	r24, 0xF7	; 247
 160:	8b b9       	out	0x0b, r24	; 11
}
 162:	ff 91       	pop	r31
 164:	ef 91       	pop	r30
 166:	8f 91       	pop	r24
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

00000172 <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	8f 93       	push	r24
 17e:	ef 93       	push	r30
 180:	ff 93       	push	r31
	TCCR2B |= (1 << CS20) | (1 << CS21) | (1 << CS22);
 182:	e1 eb       	ldi	r30, 0xB1	; 177
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	87 60       	ori	r24, 0x07	; 7
 18a:	80 83       	st	Z, r24
}
 18c:	ff 91       	pop	r31
 18e:	ef 91       	pop	r30
 190:	8f 91       	pop	r24
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__divmodsi4>:
 19c:	05 2e       	mov	r0, r21
 19e:	97 fb       	bst	r25, 7
 1a0:	1e f4       	brtc	.+6      	; 0x1a8 <__divmodsi4+0xc>
 1a2:	00 94       	com	r0
 1a4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <__negsi2>
 1a8:	57 fd       	sbrc	r21, 7
 1aa:	07 d0       	rcall	.+14     	; 0x1ba <__divmodsi4_neg2>
 1ac:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__udivmodsi4>
 1b0:	07 fc       	sbrc	r0, 7
 1b2:	03 d0       	rcall	.+6      	; 0x1ba <__divmodsi4_neg2>
 1b4:	4e f4       	brtc	.+18     	; 0x1c8 <__divmodsi4_exit>
 1b6:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__negsi2>

000001ba <__divmodsi4_neg2>:
 1ba:	50 95       	com	r21
 1bc:	40 95       	com	r20
 1be:	30 95       	com	r19
 1c0:	21 95       	neg	r18
 1c2:	3f 4f       	sbci	r19, 0xFF	; 255
 1c4:	4f 4f       	sbci	r20, 0xFF	; 255
 1c6:	5f 4f       	sbci	r21, 0xFF	; 255

000001c8 <__divmodsi4_exit>:
 1c8:	08 95       	ret

000001ca <__negsi2>:
 1ca:	90 95       	com	r25
 1cc:	80 95       	com	r24
 1ce:	70 95       	com	r23
 1d0:	61 95       	neg	r22
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	8f 4f       	sbci	r24, 0xFF	; 255
 1d6:	9f 4f       	sbci	r25, 0xFF	; 255
 1d8:	08 95       	ret

000001da <__umulhisi3>:
 1da:	a2 9f       	mul	r26, r18
 1dc:	b0 01       	movw	r22, r0
 1de:	b3 9f       	mul	r27, r19
 1e0:	c0 01       	movw	r24, r0
 1e2:	a3 9f       	mul	r26, r19
 1e4:	70 0d       	add	r23, r0
 1e6:	81 1d       	adc	r24, r1
 1e8:	11 24       	eor	r1, r1
 1ea:	91 1d       	adc	r25, r1
 1ec:	b2 9f       	mul	r27, r18
 1ee:	70 0d       	add	r23, r0
 1f0:	81 1d       	adc	r24, r1
 1f2:	11 24       	eor	r1, r1
 1f4:	91 1d       	adc	r25, r1
 1f6:	08 95       	ret

000001f8 <__udivmodsi4>:
 1f8:	a1 e2       	ldi	r26, 0x21	; 33
 1fa:	1a 2e       	mov	r1, r26
 1fc:	aa 1b       	sub	r26, r26
 1fe:	bb 1b       	sub	r27, r27
 200:	fd 01       	movw	r30, r26
 202:	0d c0       	rjmp	.+26     	; 0x21e <__udivmodsi4_ep>

00000204 <__udivmodsi4_loop>:
 204:	aa 1f       	adc	r26, r26
 206:	bb 1f       	adc	r27, r27
 208:	ee 1f       	adc	r30, r30
 20a:	ff 1f       	adc	r31, r31
 20c:	a2 17       	cp	r26, r18
 20e:	b3 07       	cpc	r27, r19
 210:	e4 07       	cpc	r30, r20
 212:	f5 07       	cpc	r31, r21
 214:	20 f0       	brcs	.+8      	; 0x21e <__udivmodsi4_ep>
 216:	a2 1b       	sub	r26, r18
 218:	b3 0b       	sbc	r27, r19
 21a:	e4 0b       	sbc	r30, r20
 21c:	f5 0b       	sbc	r31, r21

0000021e <__udivmodsi4_ep>:
 21e:	66 1f       	adc	r22, r22
 220:	77 1f       	adc	r23, r23
 222:	88 1f       	adc	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	1a 94       	dec	r1
 228:	69 f7       	brne	.-38     	; 0x204 <__udivmodsi4_loop>
 22a:	60 95       	com	r22
 22c:	70 95       	com	r23
 22e:	80 95       	com	r24
 230:	90 95       	com	r25
 232:	9b 01       	movw	r18, r22
 234:	ac 01       	movw	r20, r24
 236:	bd 01       	movw	r22, r26
 238:	cf 01       	movw	r24, r30
 23a:	08 95       	ret

0000023c <_exit>:
 23c:	f8 94       	cli

0000023e <__stop_program>:
 23e:	ff cf       	rjmp	.-2      	; 0x23e <__stop_program>
