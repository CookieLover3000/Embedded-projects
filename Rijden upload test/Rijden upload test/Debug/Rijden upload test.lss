
Rijden upload test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000264  000002d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000264  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000030c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  0000034c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000efe  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000af8  00000000  00000000  000012e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000552  00000000  00000000  00001dda  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  0000232c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005f0  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000232  00000000  00000000  00002a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002c62  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  70:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  74:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  80:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  8c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  90:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  94:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  98:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  9c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	e4 e6       	ldi	r30, 0x64	; 100
  c0:	f2 e0       	ldi	r31, 0x02	; 2
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a2 30       	cpi	r26, 0x02	; 2
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>
  ce:	0e 94 c9 00 	call	0x192	; 0x192 <main>
  d2:	0c 94 30 01 	jmp	0x260	; 0x260 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <snelheidMotors>:
	PORTB |= geleLED;    //zet led aan

}
void zetGeleLedUit() {

	PORTB &= ~geleLED; //zet led uit
  da:	90 e6       	ldi	r25, 0x60	; 96
  dc:	94 b9       	out	0x04, r25	; 4
  de:	93 ea       	ldi	r25, 0xA3	; 163
  e0:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
  e4:	99 e0       	ldi	r25, 0x09	; 9
  e6:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  f0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  f4:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
  f8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
  fc:	08 95       	ret

000000fe <links>:
  fe:	85 b1       	in	r24, 0x05	; 5
 100:	84 60       	ori	r24, 0x04	; 4
 102:	85 b9       	out	0x05, r24	; 5
 104:	85 b1       	in	r24, 0x05	; 5
 106:	8d 7f       	andi	r24, 0xFD	; 253
 108:	85 b9       	out	0x05, r24	; 5
 10a:	08 95       	ret

0000010c <rechts>:
 10c:	85 b1       	in	r24, 0x05	; 5
 10e:	82 60       	ori	r24, 0x02	; 2
 110:	85 b9       	out	0x05, r24	; 5
 112:	85 b1       	in	r24, 0x05	; 5
 114:	8b 7f       	andi	r24, 0xFB	; 251
 116:	85 b9       	out	0x05, r24	; 5
 118:	08 95       	ret

0000011a <zetMotorsAan>:
 11a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 11e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 122:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 126:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 12a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 12e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 132:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 136:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 13a:	08 95       	ret

0000013c <zetMotorsUit>:
 13c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 140:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 144:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 148:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 14c:	08 95       	ret

0000014e <richtingMotors>:
 14e:	81 30       	cpi	r24, 0x01	; 1
 150:	21 f4       	brne	.+8      	; 0x15a <richtingMotors+0xc>
 152:	85 b1       	in	r24, 0x05	; 5
 154:	86 60       	ori	r24, 0x06	; 6
 156:	85 b9       	out	0x05, r24	; 5
 158:	08 95       	ret
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	89 7f       	andi	r24, 0xF9	; 249
 15e:	85 b9       	out	0x05, r24	; 5
 160:	08 95       	ret

00000162 <initialiseerGeleLed>:
 162:	84 b1       	in	r24, 0x04	; 4
 164:	80 68       	ori	r24, 0x80	; 128
 166:	84 b9       	out	0x04, r24	; 4
 168:	08 95       	ret

0000016a <zetGeleLedAan>:
 16a:	85 b1       	in	r24, 0x05	; 5
 16c:	80 68       	ori	r24, 0x80	; 128
 16e:	85 b9       	out	0x05, r24	; 5
 170:	08 95       	ret

00000172 <init_a>:
	
}
 
void init_a(){
	
	DDRB = TOETS_A; 
 172:	88 e0       	ldi	r24, 0x08	; 8
 174:	84 b9       	out	0x04, r24	; 4
 176:	08 95       	ret

00000178 <initialisatie>:
}


void initialisatie(){
	
	snelheidMotors(snelheid);
 178:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 17c:	0e 94 6d 00 	call	0xda	; 0xda <snelheidMotors>
 	initialiseerGeleLed();
 180:	0e 94 b1 00 	call	0x162	; 0x162 <initialiseerGeleLed>
	init_a();
 184:	0e 94 b9 00 	call	0x172	; 0x172 <init_a>
	links();
 188:	0e 94 7f 00 	call	0xfe	; 0xfe <links>
	rechts();
 18c:	0e 94 86 00 	call	0x10c	; 0x10c <rechts>
 190:	08 95       	ret

00000192 <main>:



int main (void){
	
	initialisatie();
 192:	0e 94 bc 00 	call	0x178	; 0x178 <initialisatie>
	
	while(1){
			zetMotorsAan();
 196:	0e 94 8d 00 	call	0x11a	; 0x11a <zetMotorsAan>
			richtingMotors(vooruit);
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	0e 94 a7 00 	call	0x14e	; 0x14e <richtingMotors>
			zetGeleLedAan();
 1a0:	0e 94 b5 00 	call	0x16a	; 0x16a <zetGeleLedAan>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	89 e6       	ldi	r24, 0x69	; 105
 1a8:	98 e1       	ldi	r25, 0x18	; 24
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x18>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x22>
 1b4:	00 00       	nop
			_delay_ms(500);
			zetMotorsUit();
 1b6:	0e 94 9e 00 	call	0x13c	; 0x13c <zetMotorsUit>
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	89 e6       	ldi	r24, 0x69	; 105
 1be:	98 e1       	ldi	r25, 0x18	; 24
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x2e>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x38>
 1ca:	00 00       	nop
			_delay_ms(500);
			zetMotorsAan();
 1cc:	0e 94 8d 00 	call	0x11a	; 0x11a <zetMotorsAan>
			richtingMotors(achteruit);
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	0e 94 a7 00 	call	0x14e	; 0x14e <richtingMotors>
 1d6:	2f ef       	ldi	r18, 0xFF	; 255
 1d8:	89 e6       	ldi	r24, 0x69	; 105
 1da:	98 e1       	ldi	r25, 0x18	; 24
 1dc:	21 50       	subi	r18, 0x01	; 1
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <main+0x4a>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0x54>
 1e6:	00 00       	nop
			_delay_ms(500);
			zetMotorsUit();
 1e8:	0e 94 9e 00 	call	0x13c	; 0x13c <zetMotorsUit>
 1ec:	2f ef       	ldi	r18, 0xFF	; 255
 1ee:	89 e6       	ldi	r24, 0x69	; 105
 1f0:	98 e1       	ldi	r25, 0x18	; 24
 1f2:	21 50       	subi	r18, 0x01	; 1
 1f4:	80 40       	sbci	r24, 0x00	; 0
 1f6:	90 40       	sbci	r25, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x60>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x6a>
 1fc:	00 00       	nop
			_delay_ms(500);
			zetMotorsAan();
 1fe:	0e 94 8d 00 	call	0x11a	; 0x11a <zetMotorsAan>
			rechts();
 202:	0e 94 86 00 	call	0x10c	; 0x10c <rechts>
 206:	2f ef       	ldi	r18, 0xFF	; 255
 208:	89 e6       	ldi	r24, 0x69	; 105
 20a:	98 e1       	ldi	r25, 0x18	; 24
 20c:	21 50       	subi	r18, 0x01	; 1
 20e:	80 40       	sbci	r24, 0x00	; 0
 210:	90 40       	sbci	r25, 0x00	; 0
 212:	e1 f7       	brne	.-8      	; 0x20c <main+0x7a>
 214:	00 c0       	rjmp	.+0      	; 0x216 <main+0x84>
 216:	00 00       	nop
			_delay_ms(500);
			zetMotorsUit();
 218:	0e 94 9e 00 	call	0x13c	; 0x13c <zetMotorsUit>
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	89 e6       	ldi	r24, 0x69	; 105
 220:	98 e1       	ldi	r25, 0x18	; 24
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x90>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x9a>
 22c:	00 00       	nop
			_delay_ms(500);
			zetMotorsAan();
 22e:	0e 94 8d 00 	call	0x11a	; 0x11a <zetMotorsAan>
			links();
 232:	0e 94 7f 00 	call	0xfe	; 0xfe <links>
 236:	2f ef       	ldi	r18, 0xFF	; 255
 238:	89 e6       	ldi	r24, 0x69	; 105
 23a:	98 e1       	ldi	r25, 0x18	; 24
 23c:	21 50       	subi	r18, 0x01	; 1
 23e:	80 40       	sbci	r24, 0x00	; 0
 240:	90 40       	sbci	r25, 0x00	; 0
 242:	e1 f7       	brne	.-8      	; 0x23c <main+0xaa>
 244:	00 c0       	rjmp	.+0      	; 0x246 <main+0xb4>
 246:	00 00       	nop
			_delay_ms(500);
			zetMotorsUit();
 248:	0e 94 9e 00 	call	0x13c	; 0x13c <zetMotorsUit>
 24c:	2f ef       	ldi	r18, 0xFF	; 255
 24e:	89 e6       	ldi	r24, 0x69	; 105
 250:	98 e1       	ldi	r25, 0x18	; 24
 252:	21 50       	subi	r18, 0x01	; 1
 254:	80 40       	sbci	r24, 0x00	; 0
 256:	90 40       	sbci	r25, 0x00	; 0
 258:	e1 f7       	brne	.-8      	; 0x252 <main+0xc0>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <main+0xca>
 25c:	00 00       	nop
 25e:	9b cf       	rjmp	.-202    	; 0x196 <main+0x4>

00000260 <_exit>:
 260:	f8 94       	cli

00000262 <__stop_program>:
 262:	ff cf       	rjmp	.-2      	; 0x262 <__stop_program>
