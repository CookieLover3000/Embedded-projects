
Opdracht5C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000500  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ac  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000530  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a46  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000727  00000000  00000000  00000ff6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000035f  00000000  00000000  0000171d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003bf  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000013b  00000000  00000000  00001eb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001fee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 e5 00 	call	0x1ca	; 0x1ca <main>
  78:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initialisatie>:
        rust(2000);
        } while (1) {
    }
}
void initialisatie() {
    DDRB |= PORTB2; // het genereren van een toon gebeurd op een output
  80:	84 b1       	in	r24, 0x04	; 4
  82:	82 60       	ori	r24, 0x02	; 2
  84:	84 b9       	out	0x04, r24	; 4
    TCCR1A |= 1 << COM1B0;
  86:	e0 e8       	ldi	r30, 0x80	; 128
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	80 61       	ori	r24, 0x10	; 16
  8e:	80 83       	st	Z, r24
    TCCR1B |= 1 << WGM12 | 1 << CS10;
  90:	e1 e8       	ldi	r30, 0x81	; 129
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	89 60       	ori	r24, 0x09	; 9
  98:	80 83       	st	Z, r24
	TCNT1 = 0;
  9a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  9e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  a2:	08 95       	ret

000000a4 <rust>:
    OCR1A = F_CPU/((freq * 2)-1);//je eigen code
    rust(tijd);
    OCR1A = 0;
}
void rust(uint16_t v) {
    for(uint16_t i=0; i< v; ++i)
  a4:	20 e0       	ldi	r18, 0x00	; 0
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	08 c0       	rjmp	.+16     	; 0xba <rust+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	ef e8       	ldi	r30, 0x8F	; 143
  ac:	f1 e0       	ldi	r31, 0x01	; 1
  ae:	31 97       	sbiw	r30, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <rust+0xa>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <rust+0x10>
  b4:	00 00       	nop
  b6:	2f 5f       	subi	r18, 0xFF	; 255
  b8:	3f 4f       	sbci	r19, 0xFF	; 255
  ba:	28 17       	cp	r18, r24
  bc:	39 07       	cpc	r19, r25
  be:	a8 f3       	brcs	.-22     	; 0xaa <rust+0x6>
    _delay_us(100);
}
  c0:	08 95       	ret

000000c2 <playNoot>:
    DDRB |= PORTB2; // het genereren van een toon gebeurd op een output
    TCCR1A |= 1 << COM1B0;
    TCCR1B |= 1 << WGM12 | 1 << CS10;
	TCNT1 = 0;
	}
void playNoot(float freq, uint16_t tijd) {
  c2:	0f 93       	push	r16
  c4:	1f 93       	push	r17
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	8a 01       	movw	r16, r20
    OCR1A = F_CPU/((freq * 2)-1);//je eigen code
  cc:	9b 01       	movw	r18, r22
  ce:	ac 01       	movw	r20, r24
  d0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__addsf3>
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	40 e8       	ldi	r20, 0x80	; 128
  da:	5f e3       	ldi	r21, 0x3F	; 63
  dc:	0e 94 f5 00 	call	0x1ea	; 0x1ea <__subsf3>
  e0:	9b 01       	movw	r18, r22
  e2:	ac 01       	movw	r20, r24
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	74 e2       	ldi	r23, 0x24	; 36
  e8:	84 e7       	ldi	r24, 0x74	; 116
  ea:	9b e4       	ldi	r25, 0x4B	; 75
  ec:	0e 94 62 01 	call	0x2c4	; 0x2c4 <__divsf3>
  f0:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__fixunssfsi>
  f4:	c8 e8       	ldi	r28, 0x88	; 136
  f6:	d0 e0       	ldi	r29, 0x00	; 0
  f8:	79 83       	std	Y+1, r23	; 0x01
  fa:	68 83       	st	Y, r22
    rust(tijd);
  fc:	c8 01       	movw	r24, r16
  fe:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    OCR1A = 0;
 102:	19 82       	std	Y+1, r1	; 0x01
 104:	18 82       	st	Y, r1
}
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	1f 91       	pop	r17
 10c:	0f 91       	pop	r16
 10e:	08 95       	ret

00000110 <introBeethoven>:
    for(uint16_t i=0; i< v; ++i)
    _delay_us(100);
}

void introBeethoven(){
    playNoot(NOTE_G,TestTIJDSDUUR1);
 110:	48 e0       	ldi	r20, 0x08	; 8
 112:	57 e0       	ldi	r21, 0x07	; 7
 114:	60 e0       	ldi	r22, 0x00	; 0
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	84 ec       	ldi	r24, 0xC4	; 196
 11a:	93 e4       	ldi	r25, 0x43	; 67
 11c:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR2);
 120:	80 eb       	ldi	r24, 0xB0	; 176
 122:	94 e0       	ldi	r25, 0x04	; 4
 124:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_G,TestTIJDSDUUR1);
 128:	48 e0       	ldi	r20, 0x08	; 8
 12a:	57 e0       	ldi	r21, 0x07	; 7
 12c:	60 e0       	ldi	r22, 0x00	; 0
 12e:	70 e0       	ldi	r23, 0x00	; 0
 130:	84 ec       	ldi	r24, 0xC4	; 196
 132:	93 e4       	ldi	r25, 0x43	; 67
 134:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR2);
 138:	80 eb       	ldi	r24, 0xB0	; 176
 13a:	94 e0       	ldi	r25, 0x04	; 4
 13c:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_G,TestTIJDSDUUR1);
 140:	48 e0       	ldi	r20, 0x08	; 8
 142:	57 e0       	ldi	r21, 0x07	; 7
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	70 e0       	ldi	r23, 0x00	; 0
 148:	84 ec       	ldi	r24, 0xC4	; 196
 14a:	93 e4       	ldi	r25, 0x43	; 67
 14c:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR2);
 150:	80 eb       	ldi	r24, 0xB0	; 176
 152:	94 e0       	ldi	r25, 0x04	; 4
 154:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_Ds,TestTIJDSDUUR1 * 4);
 158:	40 e2       	ldi	r20, 0x20	; 32
 15a:	5c e1       	ldi	r21, 0x1C	; 28
 15c:	64 ea       	ldi	r22, 0xA4	; 164
 15e:	70 e9       	ldi	r23, 0x90	; 144
 160:	8b e9       	ldi	r24, 0x9B	; 155
 162:	93 e4       	ldi	r25, 0x43	; 67
 164:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR2 * 2);
 168:	80 e6       	ldi	r24, 0x60	; 96
 16a:	99 e0       	ldi	r25, 0x09	; 9
 16c:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_F, TestTIJDSDUUR1);
 170:	48 e0       	ldi	r20, 0x08	; 8
 172:	57 e0       	ldi	r21, 0x07	; 7
 174:	61 e7       	ldi	r22, 0x71	; 113
 176:	7d e9       	ldi	r23, 0x9D	; 157
 178:	8e ea       	ldi	r24, 0xAE	; 174
 17a:	93 e4       	ldi	r25, 0x43	; 67
 17c:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR2);
 180:	80 eb       	ldi	r24, 0xB0	; 176
 182:	94 e0       	ldi	r25, 0x04	; 4
 184:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_F, TestTIJDSDUUR1);
 188:	48 e0       	ldi	r20, 0x08	; 8
 18a:	57 e0       	ldi	r21, 0x07	; 7
 18c:	61 e7       	ldi	r22, 0x71	; 113
 18e:	7d e9       	ldi	r23, 0x9D	; 157
 190:	8e ea       	ldi	r24, 0xAE	; 174
 192:	93 e4       	ldi	r25, 0x43	; 67
 194:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR2);
 198:	80 eb       	ldi	r24, 0xB0	; 176
 19a:	94 e0       	ldi	r25, 0x04	; 4
 19c:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_F, TestTIJDSDUUR1);
 1a0:	48 e0       	ldi	r20, 0x08	; 8
 1a2:	57 e0       	ldi	r21, 0x07	; 7
 1a4:	61 e7       	ldi	r22, 0x71	; 113
 1a6:	7d e9       	ldi	r23, 0x9D	; 157
 1a8:	8e ea       	ldi	r24, 0xAE	; 174
 1aa:	93 e4       	ldi	r25, 0x43	; 67
 1ac:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
    rust(TestTIJDSDUUR1);
 1b0:	88 e0       	ldi	r24, 0x08	; 8
 1b2:	97 e0       	ldi	r25, 0x07	; 7
 1b4:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
    playNoot(NOTE_D, TestTIJDSDUUR1);
 1b8:	48 e0       	ldi	r20, 0x08	; 8
 1ba:	57 e0       	ldi	r21, 0x07	; 7
 1bc:	6b e7       	ldi	r22, 0x7B	; 123
 1be:	74 ed       	ldi	r23, 0xD4	; 212
 1c0:	82 e9       	ldi	r24, 0x92	; 146
 1c2:	93 e4       	ldi	r25, 0x43	; 67
 1c4:	0e 94 61 00 	call	0xc2	; 0xc2 <playNoot>
 1c8:	08 95       	ret

000001ca <main>:
    }
}*/

int main(void)
{
    initialisatie();
 1ca:	0e 94 40 00 	call	0x80	; 0x80 <initialisatie>
    for(int i=0; i < 3;i++) {
 1ce:	c0 e0       	ldi	r28, 0x00	; 0
 1d0:	d0 e0       	ldi	r29, 0x00	; 0
 1d2:	07 c0       	rjmp	.+14     	; 0x1e2 <main+0x18>
        introBeethoven();
 1d4:	0e 94 88 00 	call	0x110	; 0x110 <introBeethoven>
        rust(2000);
 1d8:	80 ed       	ldi	r24, 0xD0	; 208
 1da:	97 e0       	ldi	r25, 0x07	; 7
 1dc:	0e 94 52 00 	call	0xa4	; 0xa4 <rust>
}*/

int main(void)
{
    initialisatie();
    for(int i=0; i < 3;i++) {
 1e0:	21 96       	adiw	r28, 0x01	; 1
 1e2:	c3 30       	cpi	r28, 0x03	; 3
 1e4:	d1 05       	cpc	r29, r1
 1e6:	b4 f3       	brlt	.-20     	; 0x1d4 <main+0xa>
 1e8:	ff cf       	rjmp	.-2      	; 0x1e8 <main+0x1e>

000001ea <__subsf3>:
 1ea:	50 58       	subi	r21, 0x80	; 128

000001ec <__addsf3>:
 1ec:	bb 27       	eor	r27, r27
 1ee:	aa 27       	eor	r26, r26
 1f0:	0e 94 0d 01 	call	0x21a	; 0x21a <__addsf3x>
 1f4:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_round>
 1f8:	0e 94 0c 02 	call	0x418	; 0x418 <__fp_pscA>
 1fc:	38 f0       	brcs	.+14     	; 0x20c <__addsf3+0x20>
 1fe:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscB>
 202:	20 f0       	brcs	.+8      	; 0x20c <__addsf3+0x20>
 204:	39 f4       	brne	.+14     	; 0x214 <__addsf3+0x28>
 206:	9f 3f       	cpi	r25, 0xFF	; 255
 208:	19 f4       	brne	.+6      	; 0x210 <__addsf3+0x24>
 20a:	26 f4       	brtc	.+8      	; 0x214 <__addsf3+0x28>
 20c:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_nan>
 210:	0e f4       	brtc	.+2      	; 0x214 <__addsf3+0x28>
 212:	e0 95       	com	r30
 214:	e7 fb       	bst	r30, 7
 216:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>

0000021a <__addsf3x>:
 21a:	e9 2f       	mov	r30, r25
 21c:	0e 94 2b 02 	call	0x456	; 0x456 <__fp_split3>
 220:	58 f3       	brcs	.-42     	; 0x1f8 <__addsf3+0xc>
 222:	ba 17       	cp	r27, r26
 224:	62 07       	cpc	r22, r18
 226:	73 07       	cpc	r23, r19
 228:	84 07       	cpc	r24, r20
 22a:	95 07       	cpc	r25, r21
 22c:	20 f0       	brcs	.+8      	; 0x236 <__addsf3x+0x1c>
 22e:	79 f4       	brne	.+30     	; 0x24e <__addsf3x+0x34>
 230:	a6 f5       	brtc	.+104    	; 0x29a <__addsf3x+0x80>
 232:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__fp_zero>
 236:	0e f4       	brtc	.+2      	; 0x23a <__addsf3x+0x20>
 238:	e0 95       	com	r30
 23a:	0b 2e       	mov	r0, r27
 23c:	ba 2f       	mov	r27, r26
 23e:	a0 2d       	mov	r26, r0
 240:	0b 01       	movw	r0, r22
 242:	b9 01       	movw	r22, r18
 244:	90 01       	movw	r18, r0
 246:	0c 01       	movw	r0, r24
 248:	ca 01       	movw	r24, r20
 24a:	a0 01       	movw	r20, r0
 24c:	11 24       	eor	r1, r1
 24e:	ff 27       	eor	r31, r31
 250:	59 1b       	sub	r21, r25
 252:	99 f0       	breq	.+38     	; 0x27a <__addsf3x+0x60>
 254:	59 3f       	cpi	r21, 0xF9	; 249
 256:	50 f4       	brcc	.+20     	; 0x26c <__addsf3x+0x52>
 258:	50 3e       	cpi	r21, 0xE0	; 224
 25a:	68 f1       	brcs	.+90     	; 0x2b6 <__addsf3x+0x9c>
 25c:	1a 16       	cp	r1, r26
 25e:	f0 40       	sbci	r31, 0x00	; 0
 260:	a2 2f       	mov	r26, r18
 262:	23 2f       	mov	r18, r19
 264:	34 2f       	mov	r19, r20
 266:	44 27       	eor	r20, r20
 268:	58 5f       	subi	r21, 0xF8	; 248
 26a:	f3 cf       	rjmp	.-26     	; 0x252 <__addsf3x+0x38>
 26c:	46 95       	lsr	r20
 26e:	37 95       	ror	r19
 270:	27 95       	ror	r18
 272:	a7 95       	ror	r26
 274:	f0 40       	sbci	r31, 0x00	; 0
 276:	53 95       	inc	r21
 278:	c9 f7       	brne	.-14     	; 0x26c <__addsf3x+0x52>
 27a:	7e f4       	brtc	.+30     	; 0x29a <__addsf3x+0x80>
 27c:	1f 16       	cp	r1, r31
 27e:	ba 0b       	sbc	r27, r26
 280:	62 0b       	sbc	r22, r18
 282:	73 0b       	sbc	r23, r19
 284:	84 0b       	sbc	r24, r20
 286:	ba f0       	brmi	.+46     	; 0x2b6 <__addsf3x+0x9c>
 288:	91 50       	subi	r25, 0x01	; 1
 28a:	a1 f0       	breq	.+40     	; 0x2b4 <__addsf3x+0x9a>
 28c:	ff 0f       	add	r31, r31
 28e:	bb 1f       	adc	r27, r27
 290:	66 1f       	adc	r22, r22
 292:	77 1f       	adc	r23, r23
 294:	88 1f       	adc	r24, r24
 296:	c2 f7       	brpl	.-16     	; 0x288 <__addsf3x+0x6e>
 298:	0e c0       	rjmp	.+28     	; 0x2b6 <__addsf3x+0x9c>
 29a:	ba 0f       	add	r27, r26
 29c:	62 1f       	adc	r22, r18
 29e:	73 1f       	adc	r23, r19
 2a0:	84 1f       	adc	r24, r20
 2a2:	48 f4       	brcc	.+18     	; 0x2b6 <__addsf3x+0x9c>
 2a4:	87 95       	ror	r24
 2a6:	77 95       	ror	r23
 2a8:	67 95       	ror	r22
 2aa:	b7 95       	ror	r27
 2ac:	f7 95       	ror	r31
 2ae:	9e 3f       	cpi	r25, 0xFE	; 254
 2b0:	08 f0       	brcs	.+2      	; 0x2b4 <__addsf3x+0x9a>
 2b2:	b0 cf       	rjmp	.-160    	; 0x214 <__addsf3+0x28>
 2b4:	93 95       	inc	r25
 2b6:	88 0f       	add	r24, r24
 2b8:	08 f0       	brcs	.+2      	; 0x2bc <__addsf3x+0xa2>
 2ba:	99 27       	eor	r25, r25
 2bc:	ee 0f       	add	r30, r30
 2be:	97 95       	ror	r25
 2c0:	87 95       	ror	r24
 2c2:	08 95       	ret

000002c4 <__divsf3>:
 2c4:	0e 94 76 01 	call	0x2ec	; 0x2ec <__divsf3x>
 2c8:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_round>
 2cc:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscB>
 2d0:	58 f0       	brcs	.+22     	; 0x2e8 <__divsf3+0x24>
 2d2:	0e 94 0c 02 	call	0x418	; 0x418 <__fp_pscA>
 2d6:	40 f0       	brcs	.+16     	; 0x2e8 <__divsf3+0x24>
 2d8:	29 f4       	brne	.+10     	; 0x2e4 <__divsf3+0x20>
 2da:	5f 3f       	cpi	r21, 0xFF	; 255
 2dc:	29 f0       	breq	.+10     	; 0x2e8 <__divsf3+0x24>
 2de:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>
 2e2:	51 11       	cpse	r21, r1
 2e4:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>
 2e8:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_nan>

000002ec <__divsf3x>:
 2ec:	0e 94 2b 02 	call	0x456	; 0x456 <__fp_split3>
 2f0:	68 f3       	brcs	.-38     	; 0x2cc <__divsf3+0x8>

000002f2 <__divsf3_pse>:
 2f2:	99 23       	and	r25, r25
 2f4:	b1 f3       	breq	.-20     	; 0x2e2 <__divsf3+0x1e>
 2f6:	55 23       	and	r21, r21
 2f8:	91 f3       	breq	.-28     	; 0x2de <__divsf3+0x1a>
 2fa:	95 1b       	sub	r25, r21
 2fc:	55 0b       	sbc	r21, r21
 2fe:	bb 27       	eor	r27, r27
 300:	aa 27       	eor	r26, r26
 302:	62 17       	cp	r22, r18
 304:	73 07       	cpc	r23, r19
 306:	84 07       	cpc	r24, r20
 308:	38 f0       	brcs	.+14     	; 0x318 <__divsf3_pse+0x26>
 30a:	9f 5f       	subi	r25, 0xFF	; 255
 30c:	5f 4f       	sbci	r21, 0xFF	; 255
 30e:	22 0f       	add	r18, r18
 310:	33 1f       	adc	r19, r19
 312:	44 1f       	adc	r20, r20
 314:	aa 1f       	adc	r26, r26
 316:	a9 f3       	breq	.-22     	; 0x302 <__divsf3_pse+0x10>
 318:	35 d0       	rcall	.+106    	; 0x384 <__divsf3_pse+0x92>
 31a:	0e 2e       	mov	r0, r30
 31c:	3a f0       	brmi	.+14     	; 0x32c <__divsf3_pse+0x3a>
 31e:	e0 e8       	ldi	r30, 0x80	; 128
 320:	32 d0       	rcall	.+100    	; 0x386 <__divsf3_pse+0x94>
 322:	91 50       	subi	r25, 0x01	; 1
 324:	50 40       	sbci	r21, 0x00	; 0
 326:	e6 95       	lsr	r30
 328:	00 1c       	adc	r0, r0
 32a:	ca f7       	brpl	.-14     	; 0x31e <__divsf3_pse+0x2c>
 32c:	2b d0       	rcall	.+86     	; 0x384 <__divsf3_pse+0x92>
 32e:	fe 2f       	mov	r31, r30
 330:	29 d0       	rcall	.+82     	; 0x384 <__divsf3_pse+0x92>
 332:	66 0f       	add	r22, r22
 334:	77 1f       	adc	r23, r23
 336:	88 1f       	adc	r24, r24
 338:	bb 1f       	adc	r27, r27
 33a:	26 17       	cp	r18, r22
 33c:	37 07       	cpc	r19, r23
 33e:	48 07       	cpc	r20, r24
 340:	ab 07       	cpc	r26, r27
 342:	b0 e8       	ldi	r27, 0x80	; 128
 344:	09 f0       	breq	.+2      	; 0x348 <__divsf3_pse+0x56>
 346:	bb 0b       	sbc	r27, r27
 348:	80 2d       	mov	r24, r0
 34a:	bf 01       	movw	r22, r30
 34c:	ff 27       	eor	r31, r31
 34e:	93 58       	subi	r25, 0x83	; 131
 350:	5f 4f       	sbci	r21, 0xFF	; 255
 352:	3a f0       	brmi	.+14     	; 0x362 <__divsf3_pse+0x70>
 354:	9e 3f       	cpi	r25, 0xFE	; 254
 356:	51 05       	cpc	r21, r1
 358:	78 f0       	brcs	.+30     	; 0x378 <__divsf3_pse+0x86>
 35a:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>
 35e:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>
 362:	5f 3f       	cpi	r21, 0xFF	; 255
 364:	e4 f3       	brlt	.-8      	; 0x35e <__divsf3_pse+0x6c>
 366:	98 3e       	cpi	r25, 0xE8	; 232
 368:	d4 f3       	brlt	.-12     	; 0x35e <__divsf3_pse+0x6c>
 36a:	86 95       	lsr	r24
 36c:	77 95       	ror	r23
 36e:	67 95       	ror	r22
 370:	b7 95       	ror	r27
 372:	f7 95       	ror	r31
 374:	9f 5f       	subi	r25, 0xFF	; 255
 376:	c9 f7       	brne	.-14     	; 0x36a <__divsf3_pse+0x78>
 378:	88 0f       	add	r24, r24
 37a:	91 1d       	adc	r25, r1
 37c:	96 95       	lsr	r25
 37e:	87 95       	ror	r24
 380:	97 f9       	bld	r25, 7
 382:	08 95       	ret
 384:	e1 e0       	ldi	r30, 0x01	; 1
 386:	66 0f       	add	r22, r22
 388:	77 1f       	adc	r23, r23
 38a:	88 1f       	adc	r24, r24
 38c:	bb 1f       	adc	r27, r27
 38e:	62 17       	cp	r22, r18
 390:	73 07       	cpc	r23, r19
 392:	84 07       	cpc	r24, r20
 394:	ba 07       	cpc	r27, r26
 396:	20 f0       	brcs	.+8      	; 0x3a0 <__divsf3_pse+0xae>
 398:	62 1b       	sub	r22, r18
 39a:	73 0b       	sbc	r23, r19
 39c:	84 0b       	sbc	r24, r20
 39e:	ba 0b       	sbc	r27, r26
 3a0:	ee 1f       	adc	r30, r30
 3a2:	88 f7       	brcc	.-30     	; 0x386 <__divsf3_pse+0x94>
 3a4:	e0 95       	com	r30
 3a6:	08 95       	ret

000003a8 <__fixunssfsi>:
 3a8:	0e 94 33 02 	call	0x466	; 0x466 <__fp_splitA>
 3ac:	88 f0       	brcs	.+34     	; 0x3d0 <__fixunssfsi+0x28>
 3ae:	9f 57       	subi	r25, 0x7F	; 127
 3b0:	98 f0       	brcs	.+38     	; 0x3d8 <__fixunssfsi+0x30>
 3b2:	b9 2f       	mov	r27, r25
 3b4:	99 27       	eor	r25, r25
 3b6:	b7 51       	subi	r27, 0x17	; 23
 3b8:	b0 f0       	brcs	.+44     	; 0x3e6 <__fixunssfsi+0x3e>
 3ba:	e1 f0       	breq	.+56     	; 0x3f4 <__fixunssfsi+0x4c>
 3bc:	66 0f       	add	r22, r22
 3be:	77 1f       	adc	r23, r23
 3c0:	88 1f       	adc	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	1a f0       	brmi	.+6      	; 0x3cc <__fixunssfsi+0x24>
 3c6:	ba 95       	dec	r27
 3c8:	c9 f7       	brne	.-14     	; 0x3bc <__fixunssfsi+0x14>
 3ca:	14 c0       	rjmp	.+40     	; 0x3f4 <__fixunssfsi+0x4c>
 3cc:	b1 30       	cpi	r27, 0x01	; 1
 3ce:	91 f0       	breq	.+36     	; 0x3f4 <__fixunssfsi+0x4c>
 3d0:	0e 94 4d 02 	call	0x49a	; 0x49a <__fp_zero>
 3d4:	b1 e0       	ldi	r27, 0x01	; 1
 3d6:	08 95       	ret
 3d8:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__fp_zero>
 3dc:	67 2f       	mov	r22, r23
 3de:	78 2f       	mov	r23, r24
 3e0:	88 27       	eor	r24, r24
 3e2:	b8 5f       	subi	r27, 0xF8	; 248
 3e4:	39 f0       	breq	.+14     	; 0x3f4 <__fixunssfsi+0x4c>
 3e6:	b9 3f       	cpi	r27, 0xF9	; 249
 3e8:	cc f3       	brlt	.-14     	; 0x3dc <__fixunssfsi+0x34>
 3ea:	86 95       	lsr	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b3 95       	inc	r27
 3f2:	d9 f7       	brne	.-10     	; 0x3ea <__fixunssfsi+0x42>
 3f4:	3e f4       	brtc	.+14     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3f6:	90 95       	com	r25
 3f8:	80 95       	com	r24
 3fa:	70 95       	com	r23
 3fc:	61 95       	neg	r22
 3fe:	7f 4f       	sbci	r23, 0xFF	; 255
 400:	8f 4f       	sbci	r24, 0xFF	; 255
 402:	9f 4f       	sbci	r25, 0xFF	; 255
 404:	08 95       	ret

00000406 <__fp_inf>:
 406:	97 f9       	bld	r25, 7
 408:	9f 67       	ori	r25, 0x7F	; 127
 40a:	80 e8       	ldi	r24, 0x80	; 128
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	08 95       	ret

00000412 <__fp_nan>:
 412:	9f ef       	ldi	r25, 0xFF	; 255
 414:	80 ec       	ldi	r24, 0xC0	; 192
 416:	08 95       	ret

00000418 <__fp_pscA>:
 418:	00 24       	eor	r0, r0
 41a:	0a 94       	dec	r0
 41c:	16 16       	cp	r1, r22
 41e:	17 06       	cpc	r1, r23
 420:	18 06       	cpc	r1, r24
 422:	09 06       	cpc	r0, r25
 424:	08 95       	ret

00000426 <__fp_pscB>:
 426:	00 24       	eor	r0, r0
 428:	0a 94       	dec	r0
 42a:	12 16       	cp	r1, r18
 42c:	13 06       	cpc	r1, r19
 42e:	14 06       	cpc	r1, r20
 430:	05 06       	cpc	r0, r21
 432:	08 95       	ret

00000434 <__fp_round>:
 434:	09 2e       	mov	r0, r25
 436:	03 94       	inc	r0
 438:	00 0c       	add	r0, r0
 43a:	11 f4       	brne	.+4      	; 0x440 <__fp_round+0xc>
 43c:	88 23       	and	r24, r24
 43e:	52 f0       	brmi	.+20     	; 0x454 <__fp_round+0x20>
 440:	bb 0f       	add	r27, r27
 442:	40 f4       	brcc	.+16     	; 0x454 <__fp_round+0x20>
 444:	bf 2b       	or	r27, r31
 446:	11 f4       	brne	.+4      	; 0x44c <__fp_round+0x18>
 448:	60 ff       	sbrs	r22, 0
 44a:	04 c0       	rjmp	.+8      	; 0x454 <__fp_round+0x20>
 44c:	6f 5f       	subi	r22, 0xFF	; 255
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	08 95       	ret

00000456 <__fp_split3>:
 456:	57 fd       	sbrc	r21, 7
 458:	90 58       	subi	r25, 0x80	; 128
 45a:	44 0f       	add	r20, r20
 45c:	55 1f       	adc	r21, r21
 45e:	59 f0       	breq	.+22     	; 0x476 <__fp_splitA+0x10>
 460:	5f 3f       	cpi	r21, 0xFF	; 255
 462:	71 f0       	breq	.+28     	; 0x480 <__fp_splitA+0x1a>
 464:	47 95       	ror	r20

00000466 <__fp_splitA>:
 466:	88 0f       	add	r24, r24
 468:	97 fb       	bst	r25, 7
 46a:	99 1f       	adc	r25, r25
 46c:	61 f0       	breq	.+24     	; 0x486 <__fp_splitA+0x20>
 46e:	9f 3f       	cpi	r25, 0xFF	; 255
 470:	79 f0       	breq	.+30     	; 0x490 <__fp_splitA+0x2a>
 472:	87 95       	ror	r24
 474:	08 95       	ret
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	55 1f       	adc	r21, r21
 47e:	f2 cf       	rjmp	.-28     	; 0x464 <__fp_split3+0xe>
 480:	46 95       	lsr	r20
 482:	f1 df       	rcall	.-30     	; 0x466 <__fp_splitA>
 484:	08 c0       	rjmp	.+16     	; 0x496 <__fp_splitA+0x30>
 486:	16 16       	cp	r1, r22
 488:	17 06       	cpc	r1, r23
 48a:	18 06       	cpc	r1, r24
 48c:	99 1f       	adc	r25, r25
 48e:	f1 cf       	rjmp	.-30     	; 0x472 <__fp_splitA+0xc>
 490:	86 95       	lsr	r24
 492:	71 05       	cpc	r23, r1
 494:	61 05       	cpc	r22, r1
 496:	08 94       	sec
 498:	08 95       	ret

0000049a <__fp_zero>:
 49a:	e8 94       	clt

0000049c <__fp_szero>:
 49c:	bb 27       	eor	r27, r27
 49e:	66 27       	eor	r22, r22
 4a0:	77 27       	eor	r23, r23
 4a2:	cb 01       	movw	r24, r22
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <_exit>:
 4a8:	f8 94       	cli

000004aa <__stop_program>:
 4aa:	ff cf       	rjmp	.-2      	; 0x4aa <__stop_program>
